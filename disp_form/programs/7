Needs["DatabaseLink`"];
conn = OpenSQLConnection[JDBC["MySQL(Connector/J)", "localhost:3306/input"], Username -> "root", Password -> "input212"];
{{variavelLoopEscolhidaPorJardiel}} = SQLExecute[conn, "SELECT COUNT(*) FROM valor_dispositivo_atributos WHERE jaleu=FALSE AND id_dispositivo=7"];
While[variavelLoopEscolhidaPorJardiel>0,
Clear[picture];
{{user}} = SQLExecute[conn, "SELECT SUBSTRING_INDEX(email,'@',1) FROM valor_dispositivo_atributos WHERE jaleu=FALSE AND id_dispositivo=7 ORDER BY id_valor ASC LIMIT 1"];
{{fr}}=SQLExecute[conn, "SELECT valor FROM valor_dispositivo_atributos WHERE id_config=32 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
SQLExecute[conn, "UPDATE valor_dispositivo_atributos SET jaleu=TRUE WHERE id_config=32 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
{{h}}=SQLExecute[conn, "SELECT valor FROM valor_dispositivo_atributos WHERE id_config=33 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
SQLExecute[conn, "UPDATE valor_dispositivo_atributos SET jaleu=TRUE WHERE id_config=33 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
{{\[Epsilon]r}}=SQLExecute[conn, "SELECT valor FROM valor_dispositivo_atributos WHERE id_config=34 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
SQLExecute[conn, "UPDATE valor_dispositivo_atributos SET jaleu=TRUE WHERE id_config=34 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
{{tan\[Delta]}}=SQLExecute[conn, "SELECT valor FROM valor_dispositivo_atributos WHERE id_config=35 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
SQLExecute[conn, "UPDATE valor_dispositivo_atributos SET jaleu=TRUE WHERE id_config=35 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
{{resistence}}=SQLExecute[conn, "SELECT valor FROM valor_dispositivo_atributos WHERE id_config=36 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
SQLExecute[conn, "UPDATE valor_dispositivo_atributos SET jaleu=TRUE WHERE id_config=36 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
{{reactance}}=SQLExecute[conn, "SELECT valor FROM valor_dispositivo_atributos WHERE id_config=37 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];
SQLExecute[conn, "UPDATE valor_dispositivo_atributos SET jaleu=TRUE WHERE id_config=37 AND jaleu=FALSE ORDER BY id_valor ASC LIMIT 1"];

fr = fr*10^9;
h = h*10^-3;
ZL = resistence + I*reactance;

If[0.5*10^9 < fr < 10*10^9 && 0.3*10^-3 < h < 10*10^-3 && 
   1 < \[Epsilon]r < 10 && 0.00001 < tan\[Delta] < 0.05 && 
   10 < Re[ZL] < 700 && -700 < Im[ZL] < 700,
  
  (*Condicoes iniciais*)
  
  \[CurlyEpsilon]r = \[Epsilon]r;
  
  (*constantens que nao mudam*)
  
  \[Sigma] = 3.64*10^7;
  \[Epsilon]0 = 8.854*10^-12;
  \[Mu]0 = 4 \[Pi]*10^-7;
  \[Eta]0 = Sqrt[\[Mu]0/\[Epsilon]0];
  c0 = 1/Sqrt[\[Mu]0 \[Epsilon]0];
  \[Omega]0 = 2 \[Pi] fr;
  k0 = \[Omega]0 Sqrt[\[Mu]0 \[Epsilon]0];
  Rs = Sqrt[2/(\[Omega]0 \[Mu]0 \[Sigma])]; 
  I0 = 1;
  Q1 = 0;
  Q2 = 0;
  
  (*Constantes que mudam com a frequencis*)
  \[Omega][f_] := 2 \[Pi] f;
  k[f_] := (2 \[Pi] f)/c0;
  k1[f1_] := (2 \[Pi] f1)/c0;
  \[Omega]1[f1_] := 2 *Pi*f1;
  
  (*Comprimento inicial*)
  b = c0/(2 fr Sqrt[\[Epsilon]r]);
  a = b;
  
  (*Posicao probra inicial*)
  x0 = 0.005;
  z0 = x0;
  
  (*Tamanho e orientacao da fita*)
  Dx = 1.3*10^-3;
       Dz = 1.3*10^-3;
  
  (*Subfuncao principal*)
  kt[m_, n_] := Sqrt[((m \[Pi])/a)^2 + ((n \[Pi])/b)^2];
  \[Omega]r[m_, n_] := 
   2 \[Pi] ((m c0)/(2 a Sqrt[\[Epsilon]r]) + (n c0)/(
      2 b Sqrt[\[Epsilon]r]));
  \[Epsilon]x[m_] := If[m == 0, 1, 2];
  \[Epsilon]z[n_] := If[n == 0, 1, 2];
  G[m_, n_] := Sinc[(m \[Pi] Dx)/(2 a)] Sinc[(n \[Pi] Dx)/(2 b)];
  \[Psi]0[m_, n_] := 
   Sqrt[(\[Epsilon]x[m] \[Epsilon]z[n])/(a b)]
     Cos[((m \[Pi]) x0)/a] Cos[((n \[Pi]) z0)/b];
   E1[\[Theta]_, \[Phi]_, m_?NumericQ, n_?NumericQ] := 
   2 (kt[m, n] /Sqrt[\[Epsilon]r])^2 Abs[
     Sin[\[Theta]] Sin[\[Phi]] Cos[\[Phi]]]*
    						 
    Abs[Cos[(m \[Pi])/
        2]^2 Sin[  (kt[m, n] a)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Cos[\[Phi]]] + 
      I Sin[(m \[Pi])/
        2]^2 Cos[  (kt[m, n] a)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Cos[\[Phi]]]]*
    						
    Abs[Cos[(n \[Pi])/
        2]^2 Sin[  (kt[m, n] b)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Sin[\[Phi]]] + 
      I Sin[(n \[Pi])/
        2]^2 Cos[ (kt[m, n] b)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Sin[\[Phi]]]]*
    						
    Abs[1/((kt[m, n] /
         Sqrt[\[Epsilon]r])^2 Sin[\[Theta]]^2 Cos[\[Phi]]^2 - ((
        m \[Pi])/a)^2) + 
      1/((kt[m, n] /
         Sqrt[\[Epsilon]r])^2 Sin[\[Theta]]^2 Sin[\[Phi]]^2 - ((
        n \[Pi])/b)^2)];
    E2[\[Theta]_, \[Phi]_, m_?NumericQ, n_?NumericQ] := 
   2 (kt[m, n] /Sqrt[\[Epsilon]r])^2 Abs[Sin[\[Theta]] Cos[\[Theta]]]*
    						 
    Abs[Cos[(m \[Pi])/
        2]^2 Sin[  (kt[m, n] a)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Cos[\[Phi]]] + 
      I Sin[(m \[Pi])/
        2]^2 Cos[  (kt[m, n] a)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Cos[\[Phi]]]]*
    						
    Abs[Cos[(n \[Pi])/
        2]^2 Sin[  (kt[m, n] b)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Sin[\[Phi]]] + 
      I Sin[(n \[Pi])/
        2]^2 Cos[ (kt[m, n] b)/(2 Sqrt[\[Epsilon]r])
          Sin[\[Theta]] Sin[\[Phi]]]]*
    						
    Abs[Cos[\[Phi]]^2/((kt[m, n] /
         Sqrt[\[Epsilon]r])^2 Sin[\[Theta]]^2 Cos[\[Phi]]^2 - ((
        m \[Pi])/a)^2) - 
      Sin[\[Phi]]^2/((kt[m, n] /
         Sqrt[\[Epsilon]r])^2 Sin[\[Theta]]^2 Sin[\[Phi]]^2 - ((
        n \[Pi])/b)^2)];
  
  I\[Theta][m_?NumericQ, n_?NumericQ] := 
   NIntegrate[
    Abs[E1[\[Theta], \[Phi], m, n]]^2*Sin[\[Theta]], {\[Theta], 0, 
     Pi/2}, {\[Phi], 0, Pi/2}, Method -> {Automatic, "SymbolicProcessing" -> 0}];
  I\[Phi][m_?NumericQ, n_?NumericQ] := 
   NIntegrate[
    Abs[E2[\[Theta], \[Phi], m, n]]^2*Sin[\[Theta]], {\[Theta], 0, 
     Pi/2}, {\[Phi], 0, Pi/2}, Method -> {Automatic, "SymbolicProcessing" -> 0}];
  
   \[Delta]eff[m_?NumericQ, n_?NumericQ] := 
   tan\[Delta] + Rs/h + (
    4 c0 h \[Epsilon]x[m] \[Epsilon]z[
      n] (I\[Theta][m, n] + I\[Phi][m, n]))/(\[Pi]^2 a b \[Omega]r[m, 
      n] \[Epsilon]r);
  fb[b_] := c0/(2 b Sqrt[\[Epsilon]r]);
       fa[a_] := c0/(2  a Sqrt[\[Epsilon]r]);
  E\[Theta]10[\[Theta]_] := 
   I*2 k0^2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]]*
    Sin[(k0 b)/
      2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]] Sin[0.00001]]*
    I Cos[  (k0 a)/2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]]]*(1/(
     k0^2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]]^2 Sin[0.00001]));
  E\[Phi]01[\[Theta]_] := 
   2 k0^2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]] Cos[\[Theta]]* 
    Sin[  (k0 a)/2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]]] I *(1/(
     k0^2 Sin[If[\[Theta] == 0, 0.00001, \[Theta]]]^2));
  Des[\[Theta]_] := 
   Arg[E\[Theta]10[\[Theta]]] - Arg[E\[Phi]01[\[Theta]]];
  
  Diagrama[\[Theta]_] := Sqrt[
   Abs[E\[Theta]10[\[Theta]]]^2 Cos[40 \[Theta]]^2 + 
    Abs[E\[Phi]01[\[Theta]]]^2 Cos[40 \[Theta] + Des[\[Theta]]]^2];
  
  
  (*curva de posicaoes de proba*)
  SetAttributes[PosicaoProbac, HoldAll];
  
  PosicaoProbac[a_, b_, x0_] := (   
    P = (b Sinc[(\[Pi] Dx)/(2 a)])/(a Sinc[(\[Pi] Dx)/(2 b)]);
    							\[CapitalDelta] = (\[Pi]/b - \[Pi]/a);
    												
    							kr = k0 Sqrt[\[Epsilon]r];
    							
    							
    Qeff = (Q2 kt[1, 0] (kt[0, 1] - kr) + 
      Q1 kt[0, 1] (kr - kt[1, 0]))/(\[CapitalDelta]*kr);
    							
    							\[Xi] = 
     If[kr Qeff > \[CapitalDelta], 0, \[CapitalDelta]^2 - kr^2 Qeff^2];
    
    							
    z0 = b/\[Pi] ArcCos[(
       P Qeff kr Cos[(\[Pi] x0)/a])/( \[CapitalDelta] + Sqrt[ \[Xi]])];
    					                     );
  SetAttributes[PosicaoProbai, HoldAll];
  PosicaoProbai[a_, b_, z0_] := (     
    P = (b Sinc[(\[Pi] Dx)/(2 a)])/(a Sinc[(\[Pi] Dx)/(2 b)]);
    							\[CapitalDelta] = \[Pi] (1/b - 1/a);
    							
    							kr = k0 Sqrt[\[Epsilon]r];
    							
    							
    Qeff = (Q2 kt[1, 0] (kt[0, 1] - kr) + 
      Q1 kt[0, 1] (kr - kt[1, 0]))/(\[CapitalDelta]*kr);
    														
    							\[Xi] = 
     If[kr Qeff > \[CapitalDelta], 0, \[CapitalDelta]^2 - kr^2 Qeff^2];
    
    					        	
    x0 = a/\[Pi] ArcCos[( 
       Cos[(\[Pi] z0)/b] (\[CapitalDelta] - Sqrt[ \[Xi]]))/(
       P Qeff kr )] ;   
    							);
  
  (*Funcao para razao axial*)
  RazaoAxial[a_, b_, x0_, 
    z0_] := (Exz = (
     b (\[CurlyEpsilon]r k[f]^2 (1 - I Qeff) - 
        kt[0, 1]^2) Cos[(\[Pi] x0)/a] Sinc[(\[Pi] Dx)/(2*a)])/(
     a (\[CurlyEpsilon]r k[f]^2 (1 - I Qeff) - 
        kt[1, 0]^2) Cos[(\[Pi] z0)/b] Sinc[(\[Pi] Dx)/(2*b)]);
    
    							T = Sqrt[1 + Abs[Exz]^4 + 2 Abs[Exz]^2 Cos[2 Arg[Exz]]];
    
    							
    AR = 20 Log10[
       Abs[Sqrt[(1 + Abs[Exz]^2 + T)/(1 + Abs[Exz]^2 - T)]]];
    
    							Pos = Ordering[AR, 1] // Last;
    							);
  
  
  (*Funcao para Zin*)
  
  Zin[a_, b_, x0_, 
    z0_] := -I \[Mu]0 h \[Omega][
     f] ((\[Psi]0[0, 
        1]^2 G[0, 1]^2)/( \[CurlyEpsilon]r k[f]^2 (1 - I Q1) - 
       kt[0, 1]^2) + (\[Psi]0[1, 
        0]^2 G[1, 0]^2)/( \[CurlyEpsilon]r k[f]^2 (1 - I Q2) - 
       kt[1, 0]^2) + \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(m = 0\), \(40\)]\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 
          0\), \(40\)]If[\((m == 0 && n == 1)\) || \((m == 1 && 
            n == 0)\), 0, 
\*FractionBox[\(
\*SuperscriptBox[\(\[Psi]0[m, n]\), \(2\)]\ G[m, 
             n]^2\), \(\[CurlyEpsilon]r\ 
\*SuperscriptBox[\(k[f]\), \(2\)] - kt[m, n]^2\)]]\)\));
  
  Zin1[a_, b_, f1_, x0_, 
    z0_] := -I*\[Mu]0 h \[Omega]1[
     f1] ((\[Psi]0[0, 
        1]^2 G[0, 1]^2)/( \[CurlyEpsilon]r k1[f1]^2 (1 - I Q1) - 
       kt[0, 1]^2) + (\[Psi]0[1, 
        0]^2 G[1, 0]^2)/( \[CurlyEpsilon]r k1[f1]^2 (1 - I Q2) - 
       kt[1, 0]^2) + \!\(
\*UnderoverscriptBox[\(\[Sum]\), \(m = 0\), \(40\)]\(
\*UnderoverscriptBox[\(\[Sum]\), \(n = 
          0\), \(40\)]If[\((m == 0 && n == 1)\) || \((m == 1 && 
            n == 0)\), 0, 
\*FractionBox[\(
\*SuperscriptBox[\(\[Psi]0[m, n]\), \(2\)]\ G[m, 
             n]^2\), \(\[CurlyEpsilon]r\ 
\*SuperscriptBox[\(k1[f1]\), \(2\)] - kt[m, n]^2\)]]\)\));
  
  (*Funcao para Zin capacitiva*)
  SetAttributes[ZmCapacitiva, HoldAll];
  ZmCapacitiva[a_, b_, x0_, z0_] := (
    		
    		Q1 = \[Delta]eff[0, 1]; 
    		Q2 = \[Delta]eff[1, 0];
    	         x0 = Range[0.1*10^-3, a/2, 0.01*10^-3];
    		PosicaoProbac[a, b, x0];
    		x01 = x0;
    		z01 = z0;
             (*Calculo de la frequencia donde ocurre la minima RA*)
    		x0 = x0[[1]];
    		z0 = z0[[1]];
    		RazaoAxial[a, b, x0, z0];
              (*Calculo del vector que contiene todos los Zin en la \
frequencia de RA min y calculo de zin mas cercano*)
    		x0 = x01;
    		z0 = z01;
    		Zm = 
     Zin1[a, b, f[[Pos]], x0, 
      z0]; (*para evitar que ejecute varias veces Zin1[a,b,f1]*)
    		Pos1 = Ordering[Abs[Re[Zm] - Re[ZL]], 1] // Last;
             	Zm = Zm[[Pos1]];
    		);
  
  SetAttributes[ZmInductiva, HoldAll];
  ZmInductiva[a_, b_, x0_, z0_] := (
    		Q1 = \[Delta]eff[0, 1]; 
    		Q2 = \[Delta]eff[1, 0];
    		z0 = Range[0.1*10^-3., b/2., 0.01*10^-3.];
    		PosicaoProbai[a, b, z0];
    		x01 = x0;
    		z01 = z0;
    (*Calculo de la frequencia donde ocurre la minima RA*)
    		x0 = x01[[1]];
    		z0 = z01[[1]];
    		RazaoAxial[a, b, x0, z0];
    		
    (*Calculo del vector que contiene todos los Zin en la frequencia \
de RA min y calculo de zin mas cercano*)
    	         x0 = x01;
    		z0 = z01;
    		Zm = 
     Zin1[a, b, f[[Pos]], x0, 
      z0]; (*para evitar que ejecute varias veces Zin1[a,b,f1]*)
    		Pos1 = Ordering[Abs[Re[Zm] - Re[ZL]], 1] // Last;
             	Zm = Zm[[Pos1]];
    	);
  
  (*------------------------------Programa --------------------------*)
\

  
  (*-----------------Minimina distancia entre os modos----------------*)
\

  
  Q3 = \[Delta]eff[1, 0];
  
  (*----Defining frequency limits-------*)
  BW = (fr Q3)/Sqrt[2];
  fmin = fr - 2 BW;
  fmax = fr + 2 BW;
  Paso = BW/200;
  Paso = N[(Floor[Paso, 10000])*10^-9];
  f = Range[fmin, fmax, Paso*10^9];
  (*----------------------------------*)
  
  b =  \[Pi]/(k0 Sqrt[\[Epsilon]r] (1 + Q3/2)) ;
  a =  \[Pi]/(k0 Sqrt[\[Epsilon]r] (1 - Q3/2) );
  
  ZmCapacitiva[a, b, x0, z0];
  x0 = x0[[Pos1]];
  z0 = z0[[Pos1]];
  
  (*----------------------Calculo posicao otima da \
proba-----------------*)
            step = 0.1*10^-3;
  	Zm = -I*200;
  	flag = 0;
  	Zmant = 200;
  		
  	ZmCapacitiva[a, b, x0, z0];
  	aant = a;
  	bant = b;
  
  	If[Im[ZL] > Im[Zm], flag1 = 1;
    	
    	(*======si precisa ser inductiva==============*)
    
    		  While [Abs[Im[Zm] - Im[ZL]] > 1 || Abs[Re[Zm] - Re[ZL]] > 1,
                    
     			            
     If[Abs[Im[Zm] - Zmant] < 0.1, Print["Found Local Minimum"]; 
      Break[], 0];
     	                   		                   	
     		    	   If[Im[ZL] > Im[Zm] && Abs[Re[Zm] - Re[ZL]] < 1,
      								aant = a;
      							         bant = b;
      								Zmant = Im[Zm];
      								step = If[flag == 1, step/2, step];
      						                   b = b - step;
      								
      a = (\[Pi] (kt[0, 1] - kr))/(kr kt[0, 1] - kr^2 ((Q3/2)^2 + 1));
      						                   ZmInductiva[a, b, x0, z0];
      						                   ,(*else*)
      								flag = 1;
      								Zmant = Im[Zm];
      								step = step/2;
      								b = bant - step;
      								
      a = (\[Pi] (kt[0, 1] - kr))/(kr kt[0, 1] - kr^2 ((Q3/2)^2 + 1));
      						                   ZmInductiva[a, b, x0, z0];
      			      ]
     			
     			   ]; flag = 0;
    					, flag1 = 0;
    		(*======si precisa ser  Capacitiva==============*)
    
    		  While [Abs[Im[Zm] - Im[ZL]] > 1 || Abs[Re[Zm] - Re[ZL]] > 1,
                        (*Sale da bucla se chegou ao objetivo ou se \
nao encuentra a parte real*)
     			            
     If[Abs[Im[Zm] - Zmant] < 0.1, Print["Found Local Minimum"]; 
      Break[], 0];
                     		
     			       If[Im[Zm] > Im[ZL] && Abs[Re[Zm] - Re[ZL]] < 1,
      								aant = a;
      							         bant = b;
      								Zmant = Im[Zm];
      								step = If[flag == 1, step/2, step];
      								a = a + step;
      								
      b = (\[Pi] (kr - kt[1, 0]))/(kr^2 ((Q3/2)^2 + 1) - kr kt[1, 0]);
      								ZmCapacitiva[a, b, x0, z0];
      						                  ,(*else*)
      								flag = 1;
      								Zmant = Im[Zm];
      								step = step/2;
      								a = aant + step;
      								
      b = (\[Pi] (kr - kt[1, 0]))/(kr^2 ((Q3/2)^2 + 1) - kr kt[1, 0]);
      						                   ZmCapacitiva[a, b, x0, z0];
      				  ]
     			  	
     				]; flag = 0;
    		     ];
   
   x0 = x0[[Pos1]];
     z0 = z0[[Pos1]];	
     ZinV = Zin[a, b, x0, z0];
  (*-------------Coeficiente de reflexao-------*)
  
  M = (4 Re[ZinV] Re[ZL])/Abs[ZinV + Conjugate[ZL]]^2;			
  VSWR = (1 + Sqrt[1 - M])/(1 - Sqrt[1 - M]);			
  \[CapitalGamma] = 20 Log10[(VSWR - 1)/(VSWR + 1)];
  PosMin = Ordering[\[CapitalGamma], 1] // Last;		
  Pos\[CapitalGamma]1 = (Ordering[
       Abs[\[CapitalGamma][[PosMin ;;]] + 10], 1] // Last) + PosMin - 
    1;
  Pos\[CapitalGamma]2 = (Ordering[
      Abs[\[CapitalGamma][[;; PosMin]] + 10], 1] // Last);
  BW = Round[(f[[Pos\[CapitalGamma]1]] - 
       f[[Pos\[CapitalGamma]2]])*10^-6, 0.001];
  
  (*-------------------Campo---------------------*)
  
  E\[Phi] = 
   Table[Abs[E\[Phi]01[\[Theta]]], {\[Theta], -Pi/2, 
     Pi/2, (Pi*1)/180}];
  E\[Theta] = 
   Table[Abs[E\[Theta]10[\[Theta]]], {\[Theta], -Pi/2, 
     Pi/2, (Pi*1)/180}];
  Diag = Table[
    Diagrama[\[Theta]], {\[Theta], -Pi/2, Pi/2, (Pi*1)/180}];
  MaxE = If[Max[E\[Phi]] > Max[E\[Theta]], Max[E\[Phi]], 
    Max[E\[Theta]]];
  E\[Phi] = E\[Phi]/MaxE;
  E\[Theta] = E\[Theta]/MaxE;
  Diag = Diag/MaxE;
  
  E\[Phi][[1]] = E\[Phi][[1]] + 0.01;
  E\[Phi][[Length[E\[Phi]]]] = E\[Phi][[Length[E\[Phi]]]] + 0.01;
  E\[Phi] = 20 Log10[E\[Phi]];
  E\[Theta] = 20 Log10[E\[Theta]];
  Diag = 20 Log10[Diag];
  
  Norm1 = Min[E\[Phi]];
  E\[Phi] = E\[Phi] - Norm1;
  E\[Theta] = E\[Theta] - Norm1;
  Diag = Diag - Norm1;
  
  \[Theta]Table = Table[i, {i, -Pi/2, Pi/2, (Pi*1)/180}] + Pi/2;
  DataE\[Phi] = 
   Table[{\[Theta]Table[[i]], E\[Phi][[i]]}, {i, 1, Length[E\[Phi]], 
     1}];
  DataE\[Theta] = 
   Table[{\[Theta]Table[[i]], E\[Theta][[i]]}, {i, 1, 
     Length[E\[Theta]], 1}];
  DataDiag = 
   Table[{\[Theta]Table[[i]], Diag[[i]]}, {i, 1, Length[E\[Theta]], 
     1}];
  
  (*-----------------------------------------------*)
  \[Epsilon]effa = (\[Epsilon]r + 1)/
    2 + ((\[Epsilon]r - 1) (1 + 10 h/b)^(-(1/2)))/2 ;
  \[CapitalDelta]La = (
   h 0.412 ((\[Epsilon]effa + 0.3) (b/h + 0.264)))/((\[Epsilon]effa - 
      0.258) (b/h + 0.8));
  \[Epsilon]effb = (\[Epsilon]r + 1)/
    2 + ((\[Epsilon]r - 1) (1 + 10 h/a)^(-(1/2)))/2 ;
  \[CapitalDelta]Lb = (
   h 0.412 ((\[Epsilon]effb + 0.3) (a/h + 0.264)))/((\[Epsilon]effb - 
      0.258) (a/h + 0.8));
  
  areal = a - 2 \[CapitalDelta]La;
  breal = b - 2 \[CapitalDelta]Lb;
  x0real = x0 - \[CapitalDelta]La;
  z0real = z0 - \[CapitalDelta]Lb;
  
  (*----------------------------------------------------------------PL\
ot---------------------------------------------------*)
  
  SetOptions[ListPlot, BaseStyle -> FontSize -> 14, 
   LabelStyle -> Directive[Bold, Black]];
  SetOptions[ListLinePlot, BaseStyle -> FontSize -> 20, 
   LabelStyle -> Directive[Bold, Black], PlotStyle -> Red, 
   Filling -> Axis];
  SetOptions[ListPolarPlot, BaseStyle -> FontSize -> 17, 
   LabelStyle -> Directive[Bold, Black], PlotStyle -> Red];
  
  Plota = ListPlot[{Re[ZinV], Im[ZinV]},
    PlotRange -> Full, 
    PlotStyle -> {Directive[Black], Directive[Red]}, 
    DataRange -> {fmin*10^-9, fmax*10^-9}, Frame -> True, 
    FrameLabel -> {"Freq[GHz]", "Zin[\[CapitalOmega]]"}, 
    GridLines -> Automatic, Joined -> True, ImageSize -> 500, 
    PlotLegends -> 
     Placed[LineLegend[{"Re[Zin]", "Im[Zin]"}, 
       LegendFunction -> "Shadowbox", LegendLayout -> "Column", 
       LegendMarkerSize -> {{30, 15}}], {0.88, 0.88}]];
  
  Plotb = ListPlot[AR,
    PlotRange -> Full, PlotStyle -> Red, 
    DataRange -> {fmin*10^-9, fmax*10^-9}, Frame -> True, 
    FrameLabel -> {"Freq[GHz]", "AR[dB]"}, GridLines -> Automatic, 
    Joined -> True, ImageSize -> 500];
  
  Plotc = ListPlot[\[CapitalGamma],
    PlotRange -> Full, PlotStyle -> Red, 
    DataRange -> {fmin*10^-9, fmax*10^-9}, Frame -> True, 
    FrameLabel -> {"Freq[GHz]", "|\[CapitalGamma]|[dB]"}, 
    GridLines -> Automatic, Joined -> True, ImageSize -> 500];
  
  Plotd = 
   ListPolarPlot[{DataE\[Phi], DataE\[Theta], DataDiag}, 
    Joined -> True, InterpolationOrder -> 3, 
    PlotStyle -> {Directive[Dashed, Thick, Red], 
      Directive[Dashed, Thick, Blue], Black}, 
    Frame -> {{False, False}, {True, False}}, 
    FrameTicks -> {{{0, -Norm1/2, -Norm1}, 
       None}, {{{Norm1, 0}, {Norm1/2, -20}, {0, Norm1}, {-Norm1, 
         0}, {-Norm1/2, -20}}, None}}, 
    FrameLabel -> {"  Plane (X,Z) ", "E normalized"}, 
    PlotRange -> {{-42, 42}, {4, 49}}, PlotRangeClipping -> True, 
    PolarGridLines -> {Automatic, {10, 20, 30, 40}}, 
    PolarAxes -> Automatic, 
    PolarTicks -> {{{Pi/2, 0 Degree}, {Pi/3, 30 \[Degree]}, {Pi/6, 
        60 \[Degree]}, {0, 
        90 \[Degree]}, {2 Pi/3, -30 \[Degree]}, {5 Pi/
          6, -60 \[Degree]}, {Pi, -90 \[Degree]}}, None}, 
    PlotLegends -> 
     Placed[LineLegend[{"\!\(\*SubscriptBox[\(E\), \(\[Phi]\)]\)", 
        "\!\(\*SubscriptBox[\(E\), \(\[Theta]\)]\)", 
        "\!\(\*SubscriptBox[\(E\), \(Scanned\)]\)"}, 
       LegendFunction -> "Frame", LegendMargins -> 0, 
       LegendLayout -> "Row", LegendMarkerSize -> {{30, 15}}], {0.5 , 
       0.90}], ImageSize -> 500];
  
  Dimen = Table[Subscript[m, i, j], {i, 4}, {j, 2}];
  Dimen[[All, 1]] = {"a", "b", "x0", "y0"};
  Dimen[[All, 2]] = {Round[areal*10^3, 0.001]*"\!\(\*
StyleBox[\"mm\",\nFontFamily->\"Comic Sans MS\"]\)", 
    Round[breal*10^3, 0.01]*"\!\(\*
StyleBox[\"mm\",\nFontFamily->\"Comic Sans MS\"]\)", 
    Round[x0real*10^3, 0.01]*"\!\(\*
StyleBox[\"mm\",\nFontFamily->\"Comic Sans MS\"]\)", 
    Round[z0real*10^3, 0.01]*"\!\(\*
StyleBox[\"mm\",\nFontFamily->\"Comic Sans MS\"]\)"};
  Dados1 = 
   Grid[Dimen, Frame -> All, 
    ItemStyle -> 
     Directive[FontSize -> 20, FontWeight -> "Fat", Black], 
    Background -> {{LightRed}, None}, Spacings -> {0.5, 0.7}, 
    Dividers -> {{True, True, True}, All}];
  
  Dimen = Table[Subscript[m, i, j], {i, 4}, {j, 2}];
  Dimen[[All, 1]] = {"Zin(\[CapitalOmega])", "AR", 
    "|\[CapitalGamma]|", "BW"};
  Dimen[[All, 2]] = {Round[ZinV[[Pos]], 0.001], 
    Round[AR[[Pos]], 0.001]*"\!\(\*
StyleBox[\"dB\",\nFontFamily->\"Comic Sans MS\"]\)", 
    Round[\[CapitalGamma][[Pos]], 0.1]*"dB", BW*"MHz"};
  Dados2 = 
   Grid[Dimen, Frame -> All, 
    ItemStyle -> 
     Directive[FontSize -> 20, FontWeight -> "Fat", Black], 
    Background -> {{LightRed}, None}, Spacings -> {0.5, 0.7}, 
    Dividers -> {{True, True, True}, All}];
  
  picture = Grid[{{"\!\(\*
StyleBox[\"Input\",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\" \",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\"Impedance\",\nFontFamily->\"Comic Sans MS\"]\)", "\!\(\*
StyleBox[\"Axial\",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\" \",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\"Ratio\",\nFontFamily->\"Comic Sans MS\"]\)"}, {Plota, 
      Plotb}, {"Reflection Coeficcient", 
      "Normalized Scanned Polarization Pattern (dB)"}, {Plotc, 
      Plotd}, { "\!\(\*
StyleBox[\" \",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\"Electrical\",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\" \",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\"Caracteristics\",\nFontFamily->\"Comic Sans MS\"]\)", 
      "\!\(\*
StyleBox[\"Antenna\",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\" \",\nFontFamily->\"Comic Sans MS\"]\)\!\(\*
StyleBox[\"Dimensions\",\nFontFamily->\"Comic Sans MS\"]\)"}, {Dados2,
       Dados1}}, 
    ItemStyle -> Directive[FontSize -> 20, FontWeight -> "Fat", Bold],
     Frame -> True, Dividers -> {{True, True, True}, All}, 
    Spacings -> {1, 1}];
  
  ,
  
  Dimen1 = Table[Subscript[m, i, j], {i, 7}, {j, 2}];
    Dimen1[[All, 1]] = {" ", "fr", "h", "\[Epsilon]r", "tan\[Delta]", 
    "Re[ZL]", "Im[ZL]"};
  Dimen1[[All, 2]] = {"OUT OF RANGE", "1GHz<fr<10GHz", "0.3mm<h<10mm",
     "1<\[Epsilon]r<10", "0.00001<tan\[Delta]<0.05", 
    "10\[CapitalOmega]<Re[ZL]<700\[CapitalOmega]", 
    "-700\[CapitalOmega]<Im[ZL]<700\[CapitalOmega]"};
  picture = 
   Grid[Dimen1, Frame -> All, 
    ItemStyle -> 
     Directive[FontSize -> 20, FontWeight -> "Fat", Italic], 
    Background -> {{LightRed}, None}, Spacings -> {1, 1}, 
    Dividers -> {{True, True, True}, All}];];
If[ValueQ[picture],Export[StringJoin["/var/www/html/disp_form/results/",user,"7",".jpg"], picture],picture=False];
{{variavelLoopEscolhidaPorJardiel}} = SQLExecute[conn, "SELECT COUNT(*) FROM valor_dispositivo_atributos WHERE jaleu=FALSE AND id_dispositivo=7"]];
CloseSQLConnection[conn];